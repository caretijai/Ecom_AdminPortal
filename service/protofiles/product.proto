syntax = "proto3";

package protofiles;

import "google/api/annotations.proto";

option go_package = ".;protofiles";

message CreateCategoryRequest {
    string catg_name = 1;
    string catg_desc = 2;
    string catg_image = 3;
    string sub_catg_name = 4;
    string sub_catg_desc = 5;
    string sub_catg_image = 6;
}

message CreateCategoryResponse {
    bool status = 1;
}

message EditCategoryRequest {
    int64 catg_id = 1;
    string catg_name = 2;
    string catg_desc = 3;
}

message EditCategoryResponse {
    bool status = 1;
}

message RemoveCategoryRequest {
    int64 catg_id = 1;
}

message RemoveCategoryResponse {
    bool status = 1;
}

message GetAllCategoriesRequest {
    int32 id = 1;
}

message GetAllCategoriesResponse {
    repeated FinalSubCatg category_data = 1;
}

message FinalSubCatg {
	Category categoryData = 1;   
	repeated SubCategory subCategoryData = 2;
}

message Category {
    int64 id = 1;
    string catg_name = 2;
    string catg_desc = 3;
    string catg_image = 4;
}

message SubCategory {
    int64 id = 1;
    string sub_catg_name = 2;
    string sub_catg_desc = 3;
    string sub_catg_image = 4;
}

message EditSubCategoryRequest {
    int64 sub_catg_id = 1;
    string sub_catg_name = 2;
    string sub_catg_desc = 3;
}

message EditSubCategoryResponse {
    bool status = 1;
}

message RemoveSubCategoryRequest {
    int64 sub_catg_id = 1;
}

message RemoveSubCategoryResponse {
    bool status = 1;
}

service ProductCatalogueService {
	rpc GetAllCategories(GetAllCategoriesRequest) returns (GetAllCategoriesResponse) {
		option (google.api.http) = {
			get: "/v1/products/list_categories"
		};
	};

    rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse) {
        option (google.api.http) = {
			post: "/v1/products/add_category"
		};
    }

    rpc EditCategory(EditCategoryRequest) returns (EditCategoryResponse) {
        option (google.api.http) = {
			post: "/v1/products/edit_category"
		};
    }

    rpc RemoveCategory(RemoveCategoryRequest) returns (RemoveCategoryResponse) {
        option (google.api.http) = {
			post: "/v1/products/remove_category"
		};
    }

    rpc EditSubCategory(EditSubCategoryRequest) returns (EditSubCategoryResponse) {
        option (google.api.http) = {
			post: "/v1/products/edit_sub_category"
		};
    }

    rpc RemoveSubCategory(RemoveSubCategoryRequest) returns (RemoveSubCategoryResponse) {
        option (google.api.http) = {
			post: "/v1/products/remove_sub_category"
		};
    }
}